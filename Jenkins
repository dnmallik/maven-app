pipeline {
    agent any
   
    environment {
        PATH = "/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin" // Add Docker binary location if different
        DOCKER_REGISTRY = 'dnmallik/dedication'
        DOCKER_CREDENTIALS_ID = 'docker-credentials'
    }


    tools {
        maven "Maven3"
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/dnmallik/maven-app.git'
            }
        }
        
        stage('Build') {
            steps {
                sh 'mvn clean package'
            }
        }
        
        stage('Create Docker Image') {
            steps {
                script {
                    sh 'docker build -t mallix1:latest .'
                }
            }
        }
        
        stage('Check Port') {
            steps {
                script {
                    def portStatus = sh(script: 'netstat -tuln | grep ":9000"', returnStatus: true)
                    if (portStatus == 0) {
                        echo "Port 9000 is in use, stopping and removing the existing container"
                        sh 'docker stop mallix1'
                        sh 'docker rm mallix1'
                    } else {
                        echo "Port 9000 is available"
                    }
                }
            }
        }
        
        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry("${env.DOCKER_REGISTRY}", "${env.DOCKER_CREDENTIALS_ID}") {
                        docker.image("${env.DOCKER_IMAGE}").push('latest')
                    }
                }
            }
        }
    } 
}

